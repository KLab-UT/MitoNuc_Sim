// set up a simple neutral simulation
initialize() {
	initializeMutationRate(1e-7);
	
	initializeMutationType("m1", 0.5, "f", 0.0);
	initializeMutationType("m2", 0.5, "e", -0.01);
	initializeMutationType("m3", 0.5, "f", 0.0);
	initializeMutationType("m4", 0.5, "e", -0.01);
	
	m2.convertToSubstitution = F;
	m4.convertToSubstitution = F;
	
	initializeGenomicElementType("g1", c(m1,m2), c(1.0,1.0));
	initializeGenomicElementType("g2", c(m3,m4), c(1.0,1.0));
	
	initializeGenomicElement(g1, 0, 49999);
	initializeGenomicElement(g2, 50000, 99999);
	rates = c(1e-8,0.5,0);
	ends = c(49999,50000,99999);
	initializeRecombinationRate(rates, ends);
}

// create a population of 1000 individuals
1 early() {
	sim.addSubpop("p1", 500);
}

modifyChild() {
	mitom3 = child.genome1.mutationsOfType(m3);
	mitom4 = child.genome1.mutationsOfType(m4);
	gen2m3 = child.genome2.mutationsOfType(m3);
	gen2m4 = child.genome2.mutationsOfType(m4);
	child.genome2.removeMutations(c(gen2m3,gen2m4));
	child.genome2.addMutations(c(mitom3,mitom4));
	return T;
}

early() {
	meanFitness = mean(p1.cachedFitness(NULL));
	p1.setSubpopulationSize(asInteger(500*meanFitness));
}

// output samples of 10 genomes periodically, all fixed mutations at end
1000 late() { p1.outputSample(10); }
100000 late() { p1.outputSample(10); }
100000 late() { sim.outputFixedMutations(); }
